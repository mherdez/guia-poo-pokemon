(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{290:function(e,a,s){"use strict";s.r(a);var o=s(10),t=Object(o.a)({},(function(){var e=this,a=e._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"glosario"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#glosario"}},[e._v("#")]),e._v(" Glosario")]),e._v(" "),a("h2",{attrs:{id:"objeto"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#objeto"}},[e._v("#")]),e._v(" "),a("strong",[e._v("Objeto")])]),e._v(" "),a("p",[e._v("Un objeto es una instancia única de una clase que tiene un estado (datos) y un comportamiento (métodos) definidos en la clase.")]),e._v(" "),a("h2",{attrs:{id:"clase"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#clase"}},[e._v("#")]),e._v(" "),a("strong",[e._v("Clase")])]),e._v(" "),a("p",[e._v("Una clase es un modelo o plantilla que define los atributos y métodos que tendrán los objetos que se creen a partir de ella. Se utiliza para crear múltiples objetos con las mismas características y comportamientos.")]),e._v(" "),a("h2",{attrs:{id:"encapsulamiento"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#encapsulamiento"}},[e._v("#")]),e._v(" "),a("strong",[e._v("Encapsulamiento")])]),e._v(" "),a("p",[e._v("El encapsulamiento es el mecanismo por el cual se ocultan los detalles internos de una clase y se exponen sólo aquellos elementos que se consideran necesarios para interactuar con ella de forma controlada. Se logra mediante la definición de propiedades y métodos públicos y privados.")]),e._v(" "),a("h2",{attrs:{id:"herencia"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#herencia"}},[e._v("#")]),e._v(" "),a("strong",[e._v("Herencia")])]),e._v(" "),a("p",[e._v("La herencia es un mecanismo mediante el cual una clase puede heredar atributos y métodos de otra clase. La clase que hereda se llama clase derivada o subclase, y la clase de la que se hereda se llama clase base o superclase.")]),e._v(" "),a("h2",{attrs:{id:"polimorfismo"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#polimorfismo"}},[e._v("#")]),e._v(" "),a("strong",[e._v("Polimorfismo")])]),e._v(" "),a("p",[e._v("El polimorfismo se refiere a la capacidad de los objetos de una misma clase o de clases relacionadas por herencia de responder de forma diferente al mismo mensaje o método. Permite utilizar un mismo método con diferentes objetos y que éstos respondan de acuerdo a su propia implementación.")]),e._v(" "),a("h2",{attrs:{id:"abstraccion"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#abstraccion"}},[e._v("#")]),e._v(" "),a("strong",[e._v("Abstracción")])]),e._v(" "),a("p",[e._v("La abstracción es el proceso de identificar y definir las características y comportamientos esenciales de un objeto en un determinado contexto, y representarlos de forma simplificada. Permite enfocarse en los aspectos importantes de un objeto, omitiendo los detalles irrelevantes para un determinado uso.")]),e._v(" "),a("h2",{attrs:{id:"excepcion"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#excepcion"}},[e._v("#")]),e._v(" "),a("strong",[e._v("Excepción")])]),e._v(" "),a("p",[e._v("Las excepciones son errores o situaciones inesperadas que ocurren durante la ejecución de un programa. En la programación orientada a objetos, las excepciones se utilizan para manejar y controlar estos errores, permitiendo que el programa siga ejecutándose de forma controlada y evitando que se detenga abruptamente.")])])}),[],!1,null,null,null);a.default=t.exports}}]);