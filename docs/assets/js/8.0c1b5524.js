(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{282:function(o,e,a){"use strict";a.r(e);var r=a(10),s=Object(r.a)({},(function(){var o=this,e=o._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":o.$parent.slotKey}},[e("h1",{attrs:{id:"introduccion"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#introduccion"}},[o._v("#")]),o._v(" Introducción")]),o._v(" "),e("center",[e("img",{staticStyle:{margin:"30px"},attrs:{src:o.$withBase("/img/pokemones.jpg"),width:"500"}})]),o._v(" "),e("p",[o._v("¡Hey! ¿Te gustan los "),e("strong",[o._v("Pokémon")]),o._v("? Si es así, estás en el lugar correcto. Hoy vamos a hablar de programación orientada a objetos, utilizando los "),e("strong",[o._v("Pokémon")]),o._v(" como referencia para nuestros ejemplos y ejercicios.")]),o._v(" "),e("p",[o._v("La programación orientada a objetos es un paradigma de programación muy popular que se basa en la idea de que todo en un programa es un objeto con propiedades y métodos que pueden interactuar con otros objetos. Y los "),e("strong",[o._v("Pokémon")]),o._v(" son el ejemplo perfecto para entender cómo funciona este paradigma.")]),o._v(" "),e("p",[o._v("Imagina que los "),e("strong",[o._v("Pokémon")]),o._v(" son objetos, con sus propias características como su nombre, tipo, nivel de poder, ataque, defensa, velocidad, y así sucesivamente. Además, cada "),e("strong",[o._v("Pokémon")]),o._v(" puede realizar ciertas acciones como atacar, defenderse, curarse, entre otras.")]),o._v(" "),e("p",[o._v("En este contexto, la programación orientada a objetos nos permite modelar a los "),e("strong",[o._v("Pokémon")]),o._v(" como objetos, y luego crear clases que describen cómo deben comportarse esos objetos. También podemos utilizar herencia para crear subclases de "),e("strong",[o._v("Pokémon")]),o._v(" con diferentes habilidades y comportamientos.")]),o._v(" "),e("p",[o._v("En resumen, utilizando los "),e("strong",[o._v("Pokémon")]),o._v(" como referencia, vamos a explorar cómo funciona la programación orientada a objetos, cómo crear objetos y clases en JavaScript, y cómo utilizar la herencia y el polimorfismo para crear comportamientos únicos para cada "),e("strong",[o._v("Pokémon")]),o._v(". ¡Prepárate para atrapar todos los conceptos de POO en este viaje!")]),o._v(" "),e("h4",{staticStyle:{"text-align":"center"}},[o._v("Editorial por ChatGPT")])],1)}),[],!1,null,null,null);e.default=s.exports}}]);